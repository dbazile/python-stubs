from typing import List
from gi.repository import GObject, Gdk

# Enums
class Align:
    FILL: Align
    START: Align
    END: Align
    CENTER: Align
    BASELINE: Align
class Orientation:
    VERTICAL: Orientation
    HORIZONTAL: Orientation
class ResponseType:
    NONE: ResponseType
    APPLY: ResponseType
    HELP: ResponseType
    REJECT: ResponseType
    DELETE_EVENT: ResponseType
    OK: ResponseType
    CANCEL: ResponseType
    CLOSE: ResponseType
    YES: ResponseType
    NO: ResponseType
class StateType:
    NORMAL: StateType
    ACTIVE: StateType
    PRELIGHT: StateType
    SELECTED: StateType
    INSENSITIVE: StateType
    INCONSISTENT: StateType
    FOCUSED: StateType
class WrapMode:
    NONE: WrapMode
    CHAR: WrapMode
    WORD: WrapMode
    WORD_CHAR: WrapMode
class WindowPosition:
    NONE: WindowPosition
    CENTER: WindowPosition
    MOUSE: WindowPosition
    CENTER_ALWAYS: WindowPosition
    CENTER_ON_PARENT: WindowPosition
class PackType:
    START: PackType
    END: PackType
class InputPurpose:
    FREE_FORM: InputPurpose
    ALPHA: InputPurpose
    DIGITS: InputPurpose
    NUMBER: InputPurpose
    PHONE: InputPurpose
    URL: InputPurpose
    EMAIL: InputPurpose
    NAME: InputPurpose
    PASSWORD: InputPurpose
    PIN: InputPurpose
class Justification:
    LEFT: Justification
    RIGHT: Justification
    CENTER: Justification
    FILL: Justification

# Interfaces
class Actionable: ...
class Activatable: ...
class AppChooser: ...
class Buildable: ...

# Structs
class TargetEntry:
    def __init__(self, target: str, flags: TargetFlags, info: int): ...
    def copy(self) -> TargetEntry: ...
    def free(self): ...
class TargetList:
    def __init__(self, targets: List[TargetEntry]=None): ...
    def add(self, target: Gdk.Atom, flags: int, info: int): ...
    def add_image_targets(self, info: int, writable: bool): ...
    def add_rich_text_targets(self, info: int, deserializable: bool, buffer: TextBuffer): ...
    def add_table(self, targets: List[TargetEntry]): ...
    def add_text_targets(self, info: int): ...
    def add_uri_targets(self, info: int): ...
    def find(self, target: Gdk.Atom): ...
    def ref(self, ): ...
    def remove(self, target: Gdk.Atom): ...
    def unref(self, ): ...

# Flags
class DestDefaults:
    MOTION: DestDefaults
    HIGHLIGHT: DestDefaults
    DROP: DestDefaults
    ALL: DestDefaults

# Base classes
class Builder:
    @staticmethod
    def new_from_file(filename) -> Builder: ...
    @staticmethod
    def new_from_resource(resource_path) -> Builder: ...
    @staticmethod
    def new_from_string(string, length) -> Builder: ...
    def add_callback_symbol(self, callback_name, callback_symbol): ...
    def add_from_file(self, filename): ...
    def add_from_resource(self, resource_path): ...
    def add_from_string(self, buffer, length=-1): ...
    def add_objects_from_file(self, filename, object_ids): ...
    def add_objects_from_resource(self, resource_path, object_ids): ...
    def add_objects_from_string(self, buffer, object_ids): ...
    def connect_signals(self, obj_or_map): ...
    def connect_signals_full(self, func, *user_data): ...
    def expose_object(self, name, object): ...
    def extend_with_template(self, widget, template_type, buffer, length): ...
    def get_application(self, ): ...
    def get_object(self, name): ...
    def get_objects(self, ): ...
    def get_translation_domain(self, ): ...
    def get_type_from_name(self, type_name): ...
    def set_application(self, application): ...
    def set_translation_domain(self, domain): ...
    def value_from_string(self, pspec, string): ...
    def value_from_string_type(self, type, string): ...
class Widget(GObject.Object):
    def __init__(self, **kwargs): ...
    def activate(self, ): ...
    def add_accelerator(self, accel_signal, accel_group, accel_key, accel_mods, accel_flags): ...
    def add_device_events(self, device, events): ...
    def add_events(self, events): ...
    def add_mnemonic_label(self, label): ...
    def add_tick_callback(self, callback, *user_data): ...
    def can_activate_accel(self, signal_id): ...
    def child_focus(self, direction): ...
    def child_notify(self, child_property): ...
    def class_path(self, ): ...
    def compute_expand(self, orientation): ...
    def create_pango_context(self, ): ...
    def create_pango_layout(self, text): ...
    def destroy(self, ): ...
    def destroyed(self, widget_pointer): ...
    def device_is_shadowed(self, device): ...
    def drag_begin(self, targets, actions, button, event): ...
    def drag_begin_with_coordinates(self, targets, actions, button, event, x, y): ...
    def drag_check_threshold(self, start_x, start_y, current_x, current_y): ...
    def drag_dest_add_image_targets(self, ): ...
    def drag_dest_add_text_targets(self, ): ...
    def drag_dest_add_uri_targets(self, ): ...
    def drag_dest_find_target(self, context, target_list): ...
    def drag_dest_get_target_list(self, ): ...
    def drag_dest_get_track_motion(self, ): ...
    def drag_dest_set(self, flags: DestDefaults, targets: List[TargetEntry], actions: Gdk.DragAction): ...
    def drag_dest_set_proxy(self, proxy_window, protocol, use_coordinates): ...
    def drag_dest_set_target_list(self, target_list): ...
    def drag_dest_set_track_motion(self, track_motion): ...
    def drag_dest_unset(self, ): ...
    def drag_get_data(self, context, target, time_): ...
    def drag_highlight(self, ): ...
    def drag_source_add_image_targets(self, ): ...
    def drag_source_add_text_targets(self, ): ...
    def drag_source_add_uri_targets(self, ): ...
    def drag_source_get_target_list(self, ): ...
    def drag_source_set(self, start_button_mask: Gdk.ModifierType, targets: List[TargetEntry], actions: Gdk.DragAction): ...
    def drag_source_set_icon_gicon(self, icon): ...
    def drag_source_set_icon_name(self, icon_name): ...
    def drag_source_set_icon_pixbuf(self, pixbuf): ...
    def drag_source_set_icon_stock(self, stock_id): ...
    def drag_source_set_target_list(self, target_list): ...
    def drag_source_unset(self, ): ...
    def drag_unhighlight(self, ): ...
    def draw(self, cr): ...
    def ensure_style(self, ): ...
    def error_bell(self, ): ...
    def event(self, event): ...
    def freeze_child_notify(self, ): ...
    def get_accessible(self, ): ...
    def get_action_group(self, prefix): ...
    def get_allocated_baseline(self, ): ...
    def get_allocated_height(self, ): ...
    def get_allocated_size(self, ): ...
    def get_allocated_width(self, ): ...
    def get_allocation(self, ): ...
    def get_ancestor(self, widget_type): ...
    def get_app_paintable(self, ): ...
    def get_can_default(self, ): ...
    def get_can_focus(self, ): ...
    def get_child_requisition(self, ): ...
    def get_child_visible(self, ): ...
    def get_clip(self, ): ...
    def get_clipboard(self, selection): ...
    def get_composite_name(self, ): ...
    def get_device_enabled(self, device): ...
    def get_device_events(self, device): ...
    def get_direction(self, ): ...
    def get_display(self, ): ...
    def get_double_buffered(self, ): ...
    def get_events(self, ): ...
    def get_focus_on_click(self, ): ...
    def get_font_map(self, ): ...
    def get_font_options(self, ): ...
    def get_frame_clock(self, ): ...
    def get_halign(self, ): ...
    def get_has_tooltip(self, ): ...
    def get_has_window(self, ): ...
    def get_hexpand(self, ): ...
    def get_hexpand_set(self, ): ...
    def get_mapped(self, ): ...
    def get_margin_bottom(self, ): ...
    def get_margin_end(self, ): ...
    def get_margin_left(self, ): ...
    def get_margin_right(self, ): ...
    def get_margin_start(self, ): ...
    def get_margin_top(self, ): ...
    def get_modifier_mask(self, intent): ...
    def get_modifier_style(self, ): ...
    def get_name(self, ): ...
    def get_no_show_all(self, ): ...
    def get_opacity(self, ): ...
    def get_pango_context(self, ): ...
    def get_parent(self, ) -> Widget: ...
    def get_parent_window(self, ): ...
    def get_path(self, ): ...
    def get_pointer(self, ): ...
    def get_preferred_height(self, ): ...
    def get_preferred_height_and_baseline_for_width(self, width): ...
    def get_preferred_height_for_width(self, width): ...
    def get_preferred_size(self, ): ...
    def get_preferred_width(self, ): ...
    def get_preferred_width_for_height(self, height): ...
    def get_realized(self, ): ...
    def get_receives_default(self, ): ...
    def get_request_mode(self, ): ...
    def get_requisition(self, ): ...
    def get_root_window(self, ): ...
    def get_scale_factor(self, ): ...
    def get_screen(self, ): ...
    def get_sensitive(self, ): ...
    def get_settings(self, ): ...
    def get_size_request(self, ): ...
    def get_state(self, ): ...
    def get_state_flags(self, ): ...
    def get_style(self, ): ...
    def get_style_context(self, ) -> StyleContext: ...
    def get_support_multidevice(self, ): ...
    def get_template_child(self, widget_type, name): ...
    def get_tooltip_markup(self, ): ...
    def get_tooltip_text(self, ): ...
    def get_tooltip_window(self, ): ...
    def get_toplevel(self, ): ...
    def get_valign(self, ): ...
    def get_valign_with_baseline(self, ): ...
    def get_vexpand(self, ): ...
    def get_vexpand_set(self, ): ...
    def get_visible(self, ): ...
    def get_visual(self, ): ...
    def get_window(self, ): ...
    def grab_add(self, ): ...
    def grab_default(self, ): ...
    def grab_focus(self, ): ...
    def grab_remove(self, ): ...
    def has_default(self, ): ...
    def has_focus(self, ): ...
    def has_grab(self, ): ...
    def has_rc_style(self, ): ...
    def has_screen(self, ): ...
    def has_visible_focus(self, ): ...
    def hide(self, ): ...
    def hide_on_delete(self, ): ...
    def in_destruction(self, ): ...
    def init_template(self, ): ...
    def input_shape_combine_region(self, region): ...
    def insert_action_group(self, name, group): ...
    def intersect(self, area): ...
    def is_ancestor(self, ancestor): ...
    def is_composited(self, ): ...
    def is_drawable(self, ): ...
    def is_focus(self, ): ...
    def is_sensitive(self, ): ...
    def is_toplevel(self, ): ...
    def is_visible(self, ): ...
    def keynav_failed(self, direction): ...
    def list_accel_closures(self, ): ...
    def list_action_prefixes(self, ): ...
    def list_mnemonic_labels(self, ): ...
    def map(self, ): ...
    def mnemonic_activate(self, group_cycling): ...
    def modify_base(self, state, color): ...
    def modify_bg(self, state, color): ...
    def modify_cursor(self, primary, secondary): ...
    def modify_fg(self, state, color): ...
    def modify_font(self, font_desc): ...
    def modify_style(self, style): ...
    def modify_text(self, state, color): ...
    def override_background_color(self, state, color): ...
    def override_color(self, state, color): ...
    def override_cursor(self, cursor, secondary_cursor): ...
    def override_font(self, font_desc): ...
    def override_symbolic_color(self, name, color): ...
    def path(self, ): ...
    def queue_allocate(self, ): ...
    def queue_compute_expand(self, ): ...
    def queue_draw(self, ): ...
    def queue_draw_area(self, x, y, width, height): ...
    def queue_draw_region(self, region): ...
    def queue_resize(self, ): ...
    def queue_resize_no_redraw(self, ): ...
    def realize(self, ): ...
    def region_intersect(self, region): ...
    def register_window(self, window): ...
    def remove_accelerator(self, accel_group, accel_key, accel_mods): ...
    def remove_mnemonic_label(self, label): ...
    def remove_tick_callback(self, id): ...
    def render_icon(self, stock_id, size, detail): ...
    def render_icon_pixbuf(self, stock_id, size): ...
    def reparent(self, new_parent): ...
    def reset_rc_styles(self, ): ...
    def reset_style(self, ): ...
    def send_expose(self, event): ...
    def send_focus_change(self, event): ...
    def set_accel_path(self, accel_path, accel_group): ...
    def set_allocation(self, allocation): ...
    def set_app_paintable(self, app_paintable): ...
    def set_can_default(self, can_default): ...
    def set_can_focus(self, can_focus): ...
    def set_child_visible(self, is_visible): ...
    def set_clip(self, clip): ...
    def set_composite_name(self, name): ...
    def set_device_enabled(self, device, enabled): ...
    def set_device_events(self, device, events): ...
    def set_direction(self, dir): ...
    def set_double_buffered(self, double_buffered): ...
    def set_events(self, events): ...
    def set_focus_on_click(self, focus_on_click): ...
    def set_font_map(self, font_map): ...
    def set_font_options(self, options): ...
    def set_halign(self, align): ...
    def set_has_tooltip(self, has_tooltip): ...
    def set_has_window(self, has_window): ...
    def set_hexpand(self, expand): ...
    def set_hexpand_set(self, set): ...
    def set_mapped(self, mapped): ...
    def set_margin_bottom(self, margin): ...
    def set_margin_end(self, margin): ...
    def set_margin_left(self, margin): ...
    def set_margin_right(self, margin): ...
    def set_margin_start(self, margin): ...
    def set_margin_top(self, margin): ...
    def set_name(self, name): ...
    def set_no_show_all(self, no_show_all): ...
    def set_opacity(self, opacity): ...
    def set_parent(self, parent): ...
    def set_parent_window(self, parent_window): ...
    def set_realized(self, realized): ...
    def set_receives_default(self, receives_default): ...
    def set_redraw_on_allocate(self, redraw_on_allocate): ...
    def set_sensitive(self, sensitive): ...
    def set_size_request(self, width, height): ...
    def set_state(self, state): ...
    def set_state_flags(self, flags, clear): ...
    def set_style(self, style): ...
    def set_support_multidevice(self, support_multidevice): ...
    def set_tooltip_markup(self, markup): ...
    def set_tooltip_text(self, text): ...
    def set_tooltip_window(self, custom_window): ...
    def set_valign(self, align): ...
    def set_vexpand(self, expand): ...
    def set_vexpand_set(self, set): ...
    def set_visible(self, visible): ...
    def set_visual(self, visual): ...
    def set_window(self, window): ...
    def shape_combine_region(self, region): ...
    def show(self, ): ...
    def show_all(self, ): ...
    def show_now(self, ): ...
    def size_allocate(self, allocation): ...
    def size_allocate_with_baseline(self, allocation, baseline): ...
    def size_request(self, ): ...
    def style_attach(self, ): ...
    def style_get_property(self, property_name, value=None): ...
    def thaw_child_notify(self, ): ...
    def translate_coordinates(self, dest_widget, src_x, src_y): ...
    def trigger_tooltip_query(self, ): ...
    def unmap(self, ): ...
    def unparent(self, ): ...
    def unrealize(self, ): ...
    def unregister_window(self, window): ...
    def unset_state_flags(self, flags): ...
class Editable(GObject.GInterface):
    def copy_clipboard(self, ): ...
    def cut_clipboard(self, ): ...
    def delete_selection(self, ): ...
    def delete_text(self, start_pos, end_pos): ...
    def get_chars(self, start_pos, end_pos): ...
    def get_editable(self, ): ...
    def get_position(self, ): ...
    def get_selection_bounds(self, ): ...
    def insert_text(self, text, position): ...
    def paste_clipboard(self, ): ...
    def select_region(self, start_pos, end_pos): ...
    def set_editable(self, is_editable): ...
    def set_position(self, position): ...
class Container(Widget):
    def add(self, widget): ...
    def check_resize(self, ): ...
    def child_get(self, child, *prop_names): ...
    def child_get_property(self, child, property_name, value=None): ...
    def child_notify(self, child, child_property): ...
    def child_notify_by_pspec(self, child, pspec): ...
    def child_set(self, child, **kwargs): ...
    def child_set_property(self, child, property_name, value): ...
    def child_type(self, ): ...
    def forall(self, callback, *callback_data): ...
    def foreach(self, callback, *callback_data): ...
    def get_border_width(self, ): ...
    def get_children(self, ) -> List[Widget]: ...
    def get_focus_chain(self, ): ...
    def get_focus_child(self, ): ...
    def get_focus_hadjustment(self, ): ...
    def get_focus_vadjustment(self, ): ...
    def get_path_for_child(self, child): ...
    def get_resize_mode(self, ): ...
    def propagate_draw(self, child, cr): ...
    def remove(self, widget): ...
    def resize_children(self, ): ...
    def set_border_width(self, border_width): ...
    def set_focus_chain(self, focusable_widgets): ...
    def set_focus_child(self, child): ...
    def set_focus_hadjustment(self, adjustment): ...
    def set_focus_vadjustment(self, adjustment): ...
    def set_reallocate_redraws(self, needs_redraws): ...
    def set_resize_mode(self, resize_mode): ...
    def unset_focus_chain(self, ): ...
class Bin(Container):
    def get_child(self) -> Widget: ...
class Window(Bin):
    def activate_default(self, ): ...
    def activate_focus(self, ): ...
    def activate_key(self, event): ...
    def add_accel_group(self, accel_group): ...
    def add_mnemonic(self, keyval, target): ...
    def begin_move_drag(self, button, root_x, root_y, timestamp): ...
    def begin_resize_drag(self, edge, button, root_x, root_y, timestamp): ...
    def close(self, ): ...
    def deiconify(self, ): ...
    def fullscreen(self, ): ...
    def fullscreen_on_monitor(self, screen, monitor): ...
    def get_accept_focus(self, ): ...
    def get_application(self, ): ...
    def get_attached_to(self, ): ...
    def get_decorated(self, ): ...
    def get_default_size(self, ): ...
    def get_default_widget(self, ): ...
    def get_deletable(self, ): ...
    def get_destroy_with_parent(self, ): ...
    def get_focus(self, ): ...
    def get_focus_on_map(self, ): ...
    def get_focus_visible(self, ): ...
    def get_gravity(self, ): ...
    def get_group(self, ): ...
    def get_has_resize_grip(self, ): ...
    def get_hide_titlebar_when_maximized(self, ): ...
    def get_icon(self, ): ...
    def get_icon_list(self, ): ...
    def get_icon_name(self, ): ...
    def get_mnemonic_modifier(self, ): ...
    def get_mnemonics_visible(self, ): ...
    def get_modal(self, ): ...
    def get_opacity(self, ): ...
    def get_position(self, ): ...
    def get_resizable(self, ): ...
    def get_resize_grip_area(self, ): ...
    def get_role(self, ): ...
    def get_screen(self, ): ...
    def get_size(self, ): ...
    def get_skip_pager_hint(self, ): ...
    def get_skip_taskbar_hint(self, ): ...
    def get_title(self, ): ...
    def get_titlebar(self, ): ...
    def get_transient_for(self, ): ...
    def get_type_hint(self, ): ...
    def get_urgency_hint(self, ): ...
    def get_window_type(self, ): ...
    def has_group(self, ): ...
    def has_toplevel_focus(self, ): ...
    def iconify(self, ): ...
    def is_active(self, ): ...
    def is_maximized(self, ): ...
    def maximize(self, ): ...
    def mnemonic_activate(self, keyval, modifier): ...
    def move(self, x, y): ...
    def parse_geometry(self, geometry): ...
    def present(self, ): ...
    def present_with_time(self, timestamp): ...
    def propagate_key_event(self, event): ...
    def remove_accel_group(self, accel_group): ...
    def remove_mnemonic(self, keyval, target): ...
    def reshow_with_initial_size(self, ): ...
    def resize(self, width, height): ...
    def resize_grip_is_visible(self, ): ...
    def resize_to_geometry(self, width, height): ...
    def set_accept_focus(self, setting): ...
    def set_application(self, application): ...
    def set_attached_to(self, attach_widget): ...
    def set_decorated(self, setting): ...
    def set_default(self, default_widget): ...
    def set_default_geometry(self, width, height): ...
    def set_default_size(self, width, height): ...
    def set_deletable(self, setting): ...
    def set_destroy_with_parent(self, setting): ...
    def set_focus(self, focus): ...
    def set_focus_on_map(self, setting): ...
    def set_focus_visible(self, setting): ...
    def set_geometry_hints(self, geometry_widget, geometry, geom_mask): ...
    def set_gravity(self, gravity): ...
    def set_has_resize_grip(self, value): ...
    def set_has_user_ref_count(self, setting): ...
    def set_hide_titlebar_when_maximized(self, setting): ...
    def set_icon(self, icon): ...
    def set_icon_from_file(self, filename): ...
    def set_icon_list(self, list): ...
    def set_icon_name(self, name): ...
    def set_keep_above(self, setting): ...
    def set_keep_below(self, setting): ...
    def set_mnemonic_modifier(self, modifier): ...
    def set_mnemonics_visible(self, setting): ...
    def set_modal(self, modal): ...
    def set_opacity(self, opacity): ...
    def set_position(self, position: WindowPosition): ...
    def set_resizable(self, resizable: bool): ...
    def set_role(self, role): ...
    def set_screen(self, screen): ...
    def set_skip_pager_hint(self, setting): ...
    def set_skip_taskbar_hint(self, setting): ...
    def set_startup_id(self, startup_id): ...
    def set_title(self, title): ...
    def set_titlebar(self, titlebar): ...
    def set_transient_for(self, parent): ...
    def set_type_hint(self, hint): ...
    def set_urgency_hint(self, setting): ...
    def set_wmclass(self, wmclass_name, wmclass_class): ...
    def stick(self, ): ...
    def unfullscreen(self, ): ...
    def unmaximize(self, ): ...
    def unstick(self, ): ...
class Box(Container):
    def __init__(self, *, orientation: Gtk.Orientation = None, spacing: int = None):
    def get_baseline_position(self, ): ...
    def get_center_widget(self, ): ...
    def get_homogeneous(self, ): ...
    def get_spacing(self, ): ...
    def pack_end(self, child: Widget, expand: bool, fill: bool, padding: int): ...
    def pack_start(self, child: Widget, expand: bool, fill: bool, padding: int): ...
    def query_child_packing(self, child): ...
    def reorder_child(self, child, position): ...
    def set_baseline_position(self, position): ...
    def set_center_widget(self, widget): ...
    def set_child_packing(self, child: Widget, expand: bool, fill: bool, padding: int, pack_type: PackType): ...
    def set_homogeneous(self, homogeneous): ...
    def set_spacing(self, spacing): ...
class Misc(Widget):
    def get_alignment(self, ): ...
    def get_padding(self, ): ...
    def set_alignment(self, xalign, yalign): ...
    def set_padding(self, xpad, ypad): ...
class IconSize:
    INVALID: IconSize
    MENU: IconSize
    SMALL_TOOLBAR: IconSize
    LARGE_TOOLBAR: IconSize
    BUTTON: IconSize
    DND: IconSize
    DIALOG: IconSize
class HBox(Box): ...
class HButtonBox(ButtonBox): ...

# Classes
class ButtonBox(Box):
    def get_child_non_homogeneous(self, child): ...
    def get_child_secondary(self, child): ...
    def get_layout(self, ) -> ButtonBoxStyle: ...
    def set_child_non_homogeneous(self, child, non_homogeneous): ...
    def set_child_secondary(self, child, is_secondary): ...
    def set_layout(self, layout_style: ButtonBoxStyle): ...
class Label(Misc):
    def __init__(self, label=None): ...
    def get_angle(self, ): ...
    def get_attributes(self, ): ...
    def get_current_uri(self, ): ...
    def get_ellipsize(self, ): ...
    def get_justify(self, ): ...
    def get_label(self, ): ...
    def get_layout(self, ): ...
    def get_layout_offsets(self, ): ...
    def get_line_wrap(self, ): ...
    def get_line_wrap_mode(self, ): ...
    def get_lines(self, ): ...
    def get_max_width_chars(self, ): ...
    def get_mnemonic_keyval(self, ): ...
    def get_mnemonic_widget(self, ): ...
    def get_selectable(self, ): ...
    def get_selection_bounds(self, ): ...
    def get_single_line_mode(self, ): ...
    def get_text(self, ): ...
    def get_track_visited_links(self, ): ...
    def get_use_markup(self, ): ...
    def get_use_underline(self, ): ...
    def get_width_chars(self, ): ...
    def get_xalign(self, ): ...
    def get_yalign(self, ): ...
    def select_region(self, start_offset, end_offset): ...
    def set_angle(self, angle): ...
    def set_attributes(self, attrs): ...
    def set_ellipsize(self, mode): ...
    def set_justify(self, jtype: Justification): ...
    def set_label(self, str): ...
    def set_line_wrap(self, wrap): ...
    def set_line_wrap_mode(self, wrap_mode): ...
    def set_lines(self, lines): ...
    def set_markup(self, str): ...
    def set_markup_with_mnemonic(self, str): ...
    def set_max_width_chars(self, n_chars): ...
    def set_mnemonic_widget(self, widget): ...
    def set_pattern(self, pattern): ...
    def set_selectable(self, setting): ...
    def set_single_line_mode(self, single_line_mode): ...
    def set_text(self, str): ...
    def set_text_with_mnemonic(self, str): ...
    def set_track_visited_links(self, track_links): ...
    def set_use_markup(self, setting): ...
    def set_use_underline(self, setting): ...
    def set_width_chars(self, n_chars): ...
    def set_xalign(self, xalign: float): ...
    def set_yalign(self, yalign: float): ...
class Entry(Editable, Widget):
    def get_activates_default(self, ): ...
    def get_alignment(self, ): ...
    def get_attributes(self, ): ...
    def get_buffer(self, ): ...
    def get_completion(self, ): ...
    def get_current_icon_drag_source(self, ): ...
    def get_cursor_hadjustment(self, ): ...
    def get_has_frame(self, ): ...
    def get_icon_activatable(self, icon_pos): ...
    def get_icon_area(self, icon_pos): ...
    def get_icon_at_pos(self, x, y): ...
    def get_icon_gicon(self, icon_pos): ...
    def get_icon_name(self, icon_pos): ...
    def get_icon_pixbuf(self, icon_pos): ...
    def get_icon_sensitive(self, icon_pos): ...
    def get_icon_stock(self, icon_pos): ...
    def get_icon_storage_type(self, icon_pos): ...
    def get_icon_tooltip_markup(self, icon_pos): ...
    def get_icon_tooltip_text(self, icon_pos): ...
    def get_inner_border(self, ): ...
    def get_input_hints(self, ): ...
    def get_input_purpose(self, ) -> InputPurpose: ...
    def get_invisible_char(self, ): ...
    def get_layout(self, ): ...
    def get_layout_offsets(self, ): ...
    def get_max_length(self, ): ...
    def get_max_width_chars(self, ): ...
    def get_overwrite_mode(self, ): ...
    def get_placeholder_text(self, ): ...
    def get_progress_fraction(self, ): ...
    def get_progress_pulse_step(self, ): ...
    def get_tabs(self, ): ...
    def get_text(self, ) -> str: ...
    def get_text_area(self, ): ...
    def get_text_length(self, ): ...
    def get_visibility(self, ): ...
    def get_width_chars(self, ): ...
    def grab_focus_without_selecting(self, ): ...
    def im_context_filter_keypress(self, event): ...
    def layout_index_to_text_index(self, layout_index): ...
    def progress_pulse(self, ): ...
    def reset_im_context(self, ): ...
    def set_activates_default(self, setting): ...
    def set_alignment(self, xalign): ...
    def set_attributes(self, attrs): ...
    def set_buffer(self, buffer): ...
    def set_completion(self, completion): ...
    def set_cursor_hadjustment(self, adjustment): ...
    def set_has_frame(self, setting): ...
    def set_icon_activatable(self, icon_pos, activatable): ...
    def set_icon_drag_source(self, icon_pos, target_list, actions): ...
    def set_icon_from_gicon(self, icon_pos, icon): ...
    def set_icon_from_icon_name(self, icon_pos, icon_name): ...
    def set_icon_from_pixbuf(self, icon_pos, pixbuf): ...
    def set_icon_from_stock(self, icon_pos, stock_id): ...
    def set_icon_sensitive(self, icon_pos, sensitive): ...
    def set_icon_tooltip_markup(self, icon_pos, tooltip): ...
    def set_icon_tooltip_text(self, icon_pos, tooltip): ...
    def set_inner_border(self, border): ...
    def set_input_hints(self, hints): ...
    def set_input_purpose(self, purpose: InputPurpose): ...
    def set_invisible_char(self, ch): ...
    def set_max_length(self, max): ...
    def set_max_width_chars(self, n_chars): ...
    def set_overwrite_mode(self, overwrite): ...
    def set_placeholder_text(self, text): ...
    def set_progress_fraction(self, fraction): ...
    def set_progress_pulse_step(self, fraction): ...
    def set_tabs(self, tabs): ...
    def set_text(self, text): ...
    def set_visibility(self, visible): ...
    def set_width_chars(self, n_chars): ...
    def text_index_to_layout_index(self, text_index): ...
    def unset_invisible_char(self, ): ...
class EventBox(Bin):
    def get_above_child(self, ): ...
    def get_visible_window(self, ): ...
    def set_above_child(self, above_child): ...
    def set_visible_window(self, visible_window): ...
class Button(Bin, Activatable, Actionable):
    @staticmethod
    def new_from_icon_name(icon_name, size): ...
    @staticmethod
    def new_from_stock(stock_id): ...
    @staticmethod
    def new_with_label(label): ...
    @staticmethod
    def new_with_mnemonic(label): ...
    def clicked(self, ): ...
    def enter(self, ): ...
    def get_alignment(self, ): ...
    def get_always_show_image(self, ): ...
    def get_event_window(self, ): ...
    def get_focus_on_click(self, ): ...
    def get_image(self, ): ...
    def get_image_position(self, ): ...
    def get_label(self, ): ...
    def get_relief(self, ): ...
    def get_use_stock(self, ): ...
    def get_use_underline(self, ): ...
    def leave(self, ): ...
    def pressed(self, ): ...
    def released(self, ): ...
    def set_alignment(self, xalign, yalign): ...
    def set_always_show_image(self, always_show): ...
    def set_focus_on_click(self, focus_on_click): ...
    def set_image(self, image): ...
    def set_image_position(self, position): ...
    def set_label(self, label): ...
    def set_relief(self, relief): ...
    def set_use_stock(self, use_stock): ...
    def set_use_underline(self, use_underline): ...
class StyleProvider(GObject.GInterface):
    def get_icon_factory(self, path): ...
    def get_style(self, path): ...
    def get_style_property(self, path, state, pspec): ...
class CssProvider(StyleProvider, GObject.Object):
    def load_from_data(self, data: bytes): ...
    def load_from_file(self, file): ...
    def load_from_path(self, path): ...
    def load_from_resource(self, resource_path): ...
    def to_string(self, ): ...
class StyleContext:
    @staticmethod
    def add_provider_for_screen(screen, provider, priority): ...
    @staticmethod
    def remove_provider_for_screen(screen, provider): ...
    @staticmethod
    def reset_widgets(screen): ...
    def add_class(self, class_name): ...
    def add_provider(self, provider: StyleProvider, priority): ...
    def add_region(self, region_name, flags): ...
    def cancel_animations(self, region_id): ...
    def get_background_color(self, state): ...
    def get_border(self, state): ...
    def get_border_color(self, state): ...
    def get_color(self, state): ...
    def get_direction(self, ): ...
    def get_font(self, state): ...
    def get_frame_clock(self, ): ...
    def get_junction_sides(self, ): ...
    def get_margin(self, state): ...
    def get_padding(self, state): ...
    def get_parent(self, ): ...
    def get_path(self, ): ...
    def get_property(self, property, state): ...
    def get_scale(self, ): ...
    def get_screen(self, ): ...
    def get_section(self, property): ...
    def get_state(self, ): ...
    def get_style_property(self, property_name, value): ...
    def has_class(self, class_name): ...
    def has_region(self, region_name): ...
    def invalidate(self, ): ...
    def list_classes(self, ): ...
    def list_regions(self, ): ...
    def lookup_color(self, color_name): ...
    def lookup_icon_set(self, stock_id): ...
    def notify_state_change(self, window, region_id, state, state_value): ...
    def pop_animatable_region(self, ): ...
    def push_animatable_region(self, region_id): ...
    def remove_class(self, class_name): ...
    def remove_provider(self, provider): ...
    def remove_region(self, region_name): ...
    def restore(self, ): ...
    def save(self, ): ...
    def scroll_animations(self, window, dx, dy): ...
    def set_background(self, window): ...
    def set_direction(self, direction): ...
    def set_frame_clock(self, frame_clock): ...
    def set_junction_sides(self, sides): ...
    def set_parent(self, parent): ...
    def set_path(self, path): ...
    def set_scale(self, scale): ...
    def set_screen(self, screen): ...
    def set_state(self, flags): ...
    def state_is_running(self, state): ...
    def to_string(self, flags): ...
class ToggleButton(Button):
    def get_active(self, ): ...
    def get_inconsistent(self, ): ...
    def get_mode(self, ): ...
    def set_active(self, is_active): ...
    def set_inconsistent(self, setting): ...
    def set_mode(self, draw_indicator): ...
    def toggled(self, ): ...
class CheckButton(ToggleButton): ...
class TextBuffer(GObject.Object):
    def add_mark(self, mark, where): ...
    def add_selection_clipboard(self, clipboard): ...
    def apply_tag(self, tag, start, end): ...
    def apply_tag_by_name(self, name, start, end): ...
    def backspace(self, iter, interactive, default_editable): ...
    def begin_user_action(self, ): ...
    def copy_clipboard(self, clipboard): ...
    def create_child_anchor(self, iter): ...
    def create_mark(self, mark_name, where, left_gravity): ...
    def create_tag(self, tag_name=None, **properties): ...
    def cut_clipboard(self, clipboard, default_editable): ...
    def delete(self, start, end): ...
    def delete_interactive(self, start_iter, end_iter, default_editable): ...
    def delete_mark(self, mark): ...
    def delete_mark_by_name(self, name): ...
    def delete_selection(self, interactive, default_editable): ...
    def deserialize(self, content_buffer, format, iter, data): ...
    def deserialize_get_can_create_tags(self, format): ...
    def deserialize_set_can_create_tags(self, format, can_create_tags): ...
    def end_user_action(self, ): ...
    def get_bounds(self, ): ...
    def get_char_count(self, ): ...
    def get_copy_target_list(self, ): ...
    def get_deserialize_formats(self, ): ...
    def get_end_iter(self, ): ...
    def get_has_selection(self, ): ...
    def get_insert(self, ): ...
    def get_iter_at_child_anchor(self, anchor): ...
    def get_iter_at_line(self, line_number): ...
    def get_iter_at_line_index(self, line_number, byte_index): ...
    def get_iter_at_line_offset(self, line_number, char_offset): ...
    def get_iter_at_mark(self, mark): ...
    def get_iter_at_offset(self, char_offset): ...
    def get_line_count(self, ): ...
    def get_mark(self, name): ...
    def get_modified(self, ): ...
    def get_paste_target_list(self, ): ...
    def get_selection_bound(self, ): ...
    def get_selection_bounds(self, ): ...
    def get_serialize_formats(self, ): ...
    def get_slice(self, start, end, include_hidden_chars): ...
    def get_start_iter(self, ): ...
    def get_tag_table(self, ): ...
    def get_text(self, start, end, include_hidden_chars): ...
    def insert(self, iter, text, length=-1): ...
    def insert_at_cursor(self, text, len): ...
    def insert_child_anchor(self, iter, anchor): ...
    def insert_interactive(self, iter, text, len, default_editable): ...
    def insert_interactive_at_cursor(self, text, len, default_editable): ...
    def insert_markup(self, iter, markup, len): ...
    def insert_pixbuf(self, iter, pixbuf): ...
    def insert_range(self, iter, start, end): ...
    def insert_range_interactive(self, iter, start, end, default_editable): ...
    def insert_with_tags(self, iter, text, *tags): ...
    def insert_with_tags_by_name(self, iter, text, *tags): ...
    def move_mark(self, mark, where): ...
    def move_mark_by_name(self, name, where): ...
    def paste_clipboard(self, clipboard, override_location, default_editable): ...
    def place_cursor(self, where): ...
    def register_deserialize_format(self, mime_type, function, *user_data): ...
    def register_deserialize_tagset(self, tagset_name): ...
    def register_serialize_format(self, mime_type, function, *user_data): ...
    def register_serialize_tagset(self, tagset_name): ...
    def remove_all_tags(self, start, end): ...
    def remove_selection_clipboard(self, clipboard): ...
    def remove_tag(self, tag, start, end): ...
    def remove_tag_by_name(self, name, start, end): ...
    def select_range(self, ins, bound): ...
    def serialize(self, content_buffer, format, start, end): ...
    def set_modified(self, setting): ...
    def set_text(self, text, length=-1): ...
    def unregister_deserialize_format(self, format): ...
    def unregister_serialize_format(self, format): ...
class TextView(Container):
    def add_child_at_anchor(self, child, anchor): ...
    def add_child_in_window(self, child, which_window, xpos, ypos): ...
    def backward_display_line(self, iter): ...
    def backward_display_line_start(self, iter): ...
    def buffer_to_window_coords(self, win, buffer_x, buffer_y): ...
    def forward_display_line(self, iter): ...
    def forward_display_line_end(self, iter): ...
    def get_accepts_tab(self, ): ...
    def get_border_window_size(self, type): ...
    def get_bottom_margin(self, ): ...
    def get_buffer(self, ) -> TextBuffer: ...
    def get_cursor_locations(self, iter): ...
    def get_cursor_visible(self, ): ...
    def get_default_attributes(self, ): ...
    def get_editable(self, ): ...
    def get_hadjustment(self, ): ...
    def get_indent(self, ): ...
    def get_input_hints(self, ): ...
    def get_input_purpose(self, ) -> InputPurpose: ...
    def get_iter_at_location(self, x, y): ...
    def get_iter_at_position(self, x, y): ...
    def get_iter_location(self, iter): ...
    def get_justification(self, ): ...
    def get_left_margin(self, ): ...
    def get_line_at_y(self, y): ...
    def get_line_yrange(self, iter): ...
    def get_monospace(self, ): ...
    def get_overwrite(self, ): ...
    def get_pixels_above_lines(self, ): ...
    def get_pixels_below_lines(self, ): ...
    def get_pixels_inside_wrap(self, ): ...
    def get_right_margin(self, ): ...
    def get_tabs(self, ): ...
    def get_top_margin(self, ): ...
    def get_vadjustment(self, ): ...
    def get_visible_rect(self, ): ...
    def get_window(self, win): ...
    def get_window_type(self, window): ...
    def get_wrap_mode(self, ): ...
    def im_context_filter_keypress(self, event): ...
    def move_child(self, child, xpos, ypos): ...
    def move_mark_onscreen(self, mark): ...
    def move_visually(self, iter, count): ...
    def place_cursor_onscreen(self, ): ...
    def reset_cursor_blink(self, ): ...
    def reset_im_context(self, ): ...
    def scroll_mark_onscreen(self, mark): ...
    def scroll_to_iter(self, iter, within_margin, use_align, xalign, yalign): ...
    def scroll_to_mark(self, mark, within_margin, use_align, xalign, yalign): ...
    def set_accepts_tab(self, accepts_tab): ...
    def set_border_window_size(self, type, size): ...
    def set_bottom_margin(self, bottom_margin): ...
    def set_buffer(self, buffer): ...
    def set_cursor_visible(self, setting): ...
    def set_editable(self, setting): ...
    def set_indent(self, indent): ...
    def set_input_hints(self, hints): ...
    def set_input_purpose(self, purpose: InputPurpose): ...
    def set_justification(self, justification): ...
    def set_left_margin(self, left_margin): ...
    def set_monospace(self, monospace): ...
    def set_overwrite(self, overwrite): ...
    def set_pixels_above_lines(self, pixels_above_lines): ...
    def set_pixels_below_lines(self, pixels_below_lines): ...
    def set_pixels_inside_wrap(self, pixels_inside_wrap): ...
    def set_right_margin(self, right_margin): ...
    def set_tabs(self, tabs): ...
    def set_top_margin(self, top_margin): ...
    def set_wrap_mode(self, wrap_mode): ...
    def starts_display_line(self, iter): ...
    def window_to_buffer_coords(self, win, window_x, window_y): ...
class Dialog(Window):
    def add_action_widget(self, child, response_id): ...
    def add_button(self, button_text, response_id): ...
    def add_buttons(self, *args): ...
    def get_action_area(self, ): ...
    def get_content_area(self, ) -> Box: ...
    def get_header_bar(self, ): ...
    def get_response_for_widget(self, widget): ...
    def get_widget_for_response(self, response_id): ...
    def response(self, response_id): ...
    def run(self, ): ...
    def set_alternative_button_order_from_array(self, new_order): ...
    def set_default_response(self, response_id): ...
    def set_response_sensitive(self, response_id, setting): ...
class Image(Misc):
    @staticmethod
    def new_from_animation(animation) -> Image: ...
    @staticmethod
    def new_from_file(filename) -> Image: ...
    @staticmethod
    def new_from_gicon(icon, size) -> Image: ...
    @staticmethod
    def new_from_icon_name(icon_name, size) -> Image: ...
    @staticmethod
    def new_from_icon_set(icon_set, size) -> Image: ...
    @staticmethod
    def new_from_pixbuf(pixbuf) -> Image: ...
    @staticmethod
    def new_from_resource(resource_path) -> Image: ...
    @staticmethod
    def new_from_stock(stock_id, size) -> Image: ...
    @staticmethod
    def new_from_surface(surface) -> Image: ...
    def clear(self, ): ...
    def get_animation(self, ): ...
    def get_gicon(self, ): ...
    def get_icon_name(self, ): ...
    def get_icon_set(self, ): ...
    def get_pixbuf(self, ): ...
    def get_pixel_size(self, ): ...
    def get_stock(self, ): ...
    def get_storage_type(self, ): ...
    def set_from_animation(self, animation): ...
    def set_from_file(self, filename): ...
    def set_from_gicon(self, icon, size): ...
    def set_from_icon_name(self, icon_name, size): ...
    def set_from_icon_set(self, icon_set, size): ...
    def set_from_pixbuf(self, pixbuf): ...
    def set_from_resource(self, resource_path): ...
    def set_from_stock(self, stock_id, size): ...
    def set_from_surface(self, surface): ...
    def set_pixel_size(self, pixel_size): ...
class IconTheme(GObject.Object):
    @staticmethod
    def add_builtin_icon(icon_name, size, pixbuf): ...
    @staticmethod
    def get_default() -> IconTheme: ...
    @staticmethod
    def get_for_screen(screen): ...
    @staticmethod
    def add_resource_path(self, path): ...
    def append_search_path(self, path): ...
    def choose_icon(self, icon_names, size, flags): ...
    def choose_icon_for_scale(self, icon_names, size, scale, flags): ...
    def get_example_icon_name(self, ): ...
    def get_icon_sizes(self, icon_name): ...
    def get_search_path(self, ): ...
    def has_icon(self, icon_name): ...
    def list_contexts(self, ): ...
    def list_icons(self, context): ...
    def load_icon(self, icon_name: str, size: IconSize, flags: int): ...
    def load_icon_for_scale(self, icon_name, size, scale, flags): ...
    def load_surface(self, icon_name, size, scale, for_window, flags): ...
    def lookup_by_gicon(self, icon, size, flags): ...
    def lookup_by_gicon_for_scale(self, icon, size, scale, flags): ...
    def lookup_icon(self, icon_name, size, flags): ...
    def lookup_icon_for_scale(self, icon_name, size, scale, flags): ...
    def prepend_search_path(self, path): ...
    def rescan_if_needed(self, ): ...
    def set_custom_theme(self, theme_name): ...
    def set_screen(self, screen): ...
    def set_search_path(self, path): ...
class Frame(Bin):
    def get_label(self, ): ...
    def get_label_align(self, ): ...
    def get_label_widget(self, ): ...
    def get_shadow_type(self, ): ...
    def set_label(self, label): ...
    def set_label_align(self, xalign, yalign): ...
    def set_label_widget(self, label_widget): ...
    def set_shadow_type(self, type): ...
class Spinner(Widget):
    def __init__(self, active=False): ...
    def start(self): ...
    def stop(self): ...
class ListBox(Container):
    def bind_model(self, model, create_widget_func, *user_data): ...
    def drag_highlight_row(self, row): ...
    def drag_unhighlight_row(self, ): ...
    def get_activate_on_single_click(self, ): ...
    def get_adjustment(self, ): ...
    def get_row_at_index(self, index_): ...
    def get_row_at_y(self, y): ...
    def get_selected_row(self, ): ...
    def get_selected_rows(self, ): ...
    def get_selection_mode(self, ): ...
    def insert(self, child: Widget, position): ...
    def invalidate_filter(self, ): ...
    def invalidate_headers(self, ): ...
    def invalidate_sort(self, ): ...
    def prepend(self, child: Widget): ...
    def select_all(self, ): ...
    def select_row(self, row): ...
    def selected_foreach(self, func, *data): ...
    def set_activate_on_single_click(self, single): ...
    def set_adjustment(self, adjustment): ...
    def set_filter_func(self, filter_func, *user_data): ...
    def set_header_func(self, update_header, *user_data): ...
    def set_placeholder(self, placeholder): ...
    def set_selection_mode(self, mode): ...
    def set_sort_func(self, sort_func, *user_data): ...
    def unselect_all(self, ): ...
    def unselect_row(self, row): ...
class ListBoxRow(Bin):
    def changed(self, ): ...
    def get_activatable(self, ): ...
    def get_header(self, ): ...
    def get_index(self, ): ...
    def get_selectable(self, ): ...
    def is_selected(self, ): ...
    def set_activatable(self, activatable): ...
    def set_header(self, header): ...
    def set_selectable(self, selectable): ...
class HeaderBar(Container):
    def get_custom_title(self, ): ...
    def get_decoration_layout(self, ): ...
    def get_has_subtitle(self, ): ...
    def get_show_close_button(self, ): ...
    def get_subtitle(self, ): ...
    def get_title(self, ): ...
    def pack_end(self, child): ...
    def pack_start(self, child): ...
    def set_custom_title(self, title_widget): ...
    def set_decoration_layout(self, layout): ...
    def set_has_subtitle(self, setting): ...
    def set_show_close_button(self, setting): ...
    def set_subtitle(self, subtitle): ...
    def set_title(self, title): ...




class AboutDialog: ...
class AccelGroup: ...
class AccelLabel: ...
class AccelMap: ...
class Accessible: ...
class Action: ...
class ActionBar: ...
class ActionGroup: ...
class Adjustment: ...
class Alignment: ...
class AppChooserButton: ...
class AppChooserDialog: ...
class AppChooserWidget: ...
class Application: ...
class ApplicationWindow: ...
class Arrow: ...
class ArrowAccessible: ...
class AspectFrame: ...
class Assistant: ...
class BooleanCellAccessible: ...
class ButtonAccessible: ...
class Calendar(Widget):
    def clear_marks(self, ): ...
    def get_date(self, ): ...
    def get_day_is_marked(self, day): ...
    def get_detail_height_rows(self, ): ...
    def get_detail_width_chars(self, ): ...
    def get_display_options(self, ): ...
    def mark_day(self, day): ...
    def select_day(self, day): ...
    def select_month(self, month, year): ...
    def set_detail_func(self, func, *data): ...
    def set_detail_height_rows(self, rows): ...
    def set_detail_width_chars(self, chars): ...
    def set_display_options(self, flags): ...
    def unmark_day(self, day): ...
class CellAccessible: ...
class CellAccessibleParent: ...
class CellArea: ...
class CellAreaBox: ...
class CellAreaContext: ...
class CellEditable: ...
class CellLayout: ...
class CellRenderer: ...
class CellRendererAccel: ...
class CellRendererCombo: ...
class CellRendererPixbuf: ...
class CellRendererProgress: ...
class CellRendererSpin: ...
class CellRendererSpinner: ...
class CellRendererText: ...
class CellRendererToggle: ...
class CellView: ...
class CheckMenuItem: ...
class CheckMenuItemAccessible: ...
class Clipboard(GObject.Object):
    @staticmethod
    def get (selection) -> Clipboard: ...
    @staticmethod
    def get_default (display) -> Clipboard: ...
    @staticmethod
    def get_for_display (display, selection) -> Clipboard: ...
    def clear(self, ): ...
    def get_display(self, ): ...
    def get_owner(self, ): ...
    def request_contents(self, target, callback, *user_data): ...
    def request_image(self, callback, *user_data): ...
    def request_rich_text(self, buffer, callback, *user_data): ...
    def request_targets(self, callback, *user_data): ...
    def request_text(self, callback, *user_data): ...
    def request_uris(self, callback, *user_data): ...
    def set_can_store(self, targets): ...
    def set_image(self, pixbuf): ...
    def set_text(self, text, len): ...
    def store(self, ): ...
    def wait_for_contents(self, target): ...
    def wait_for_image(self, ): ...
    def wait_for_rich_text(self, buffer): ...
    def wait_for_targets(self, ): ...
    def wait_for_text(self, ): ...
    def wait_for_uris(self, ): ...
    def wait_is_image_available(self, ): ...
    def wait_is_rich_text_available(self, buffer): ...
    def wait_is_target_available(self, target): ...
    def wait_is_text_available(self, ): ...
    def wait_is_uris_available(self, ): ...
class ColorButton: ...
class ColorChooser: ...
class ColorChooserDialog: ...
class ColorChooserWidget: ...
class ColorSelection: ...
class ColorSelectionDialog: ...
class ComboBox: ...
class ComboBoxAccessible: ...
class ComboBoxText: ...
class ContainerAccessible: ...
class ContainerCellAccessible: ...
class DrawingArea: ...
class EntryAccessible: ...
class EntryBuffer: ...
class EntryCompletion: ...
class EntryIconAccessible: ...
class EventController: ...
class EventControllerKey: ...
class EventControllerMotion: ...
class EventControllerScroll: ...
class Expander: ...
class ExpanderAccessible: ...
class FileChooser: ...
class FileChooserButton: ...
class FileChooserDialog: ...
class FileChooserNative: ...
class FileChooserWidget: ...
class FileFilter: ...
class Fixed: ...
class FlowBox: ...
class FlowBoxAccessible: ...
class FlowBoxChild: ...
class FlowBoxChildAccessible: ...
class FontButton: ...
class FontChooser: ...
class FontChooserDialog: ...
class FontChooserWidget: ...
class FontSelection: ...
class FontSelectionDialog: ...
class FrameAccessible: ...
class GLArea: ...
class Gesture: ...
class GestureDrag: ...
class GestureLongPress: ...
class GestureMultiPress: ...
class GesturePan: ...
class GestureRotate: ...
class GestureSingle: ...
class GestureStylus: ...
class GestureSwipe: ...
class GestureZoom: ...
class Grid: ...
class HBox: ...
class HButtonBox: ...
class HPaned: ...
class HSV: ...
class HScale: ...
class HScrollbar: ...
class HSeparator: ...
class HandleBox: ...
class IMContext: ...
class IMContextSimple: ...
class IMMulticontext: ...
class IconFactory: ...
class IconInfo: ...
class IconView: ...
class IconViewAccessible: ...
class ImageAccessible: ...
class ImageCellAccessible: ...
class ImageMenuItem: ...
class InfoBar: ...
class Invisible: ...
class LabelAccessible: ...
class Layout: ...
class LevelBar: ...
class LevelBarAccessible: ...
class LinkButton: ...
class LinkButtonAccessible: ...
class ListBoxAccessible: ...
class ListBoxRowAccessible: ...
class ListStore: ...
class LockButton: ...
class LockButtonAccessible: ...
class Menu: ...
class MenuAccessible: ...
class MenuBar: ...
class MenuButton: ...
class MenuButtonAccessible: ...
class MenuItem: ...
class MenuItemAccessible: ...
class MenuShell: ...
class MenuShellAccessible: ...
class MenuToolButton: ...
class MessageDialog: ...
class ModelButton: ...
class MountOperation: ...
class NativeDialog: ...
class Notebook: ...
class NotebookAccessible: ...
class NotebookPageAccessible: ...
class NumerableIcon: ...
class OffscreenWindow: ...
class Orientable: ...
class Overlay: ...
class PadController: ...
class PageSetup: ...
class Paned: ...
class PanedAccessible: ...
class PlacesSidebar: ...
class Plug: ...
class Popover: ...
class PopoverAccessible: ...
class PopoverMenu: ...
class PrintContext: ...
class PrintOperation: ...
class PrintOperationPreview: ...
class PrintSettings: ...
class ProgressBar: ...
class ProgressBarAccessible: ...
class RadioAction: ...
class RadioButton: ...
class RadioButtonAccessible: ...
class RadioMenuItem: ...
class RadioMenuItemAccessible: ...
class RadioToolButton: ...
class Range: ...
class RangeAccessible: ...
class RcStyle: ...
class RecentAction: ...
class RecentChooser: ...
class RecentChooserDialog: ...
class RecentChooserMenu: ...
class RecentChooserWidget: ...
class RecentFilter: ...
class RecentManager: ...
class RendererCellAccessible: ...
class Revealer: ...
class Scale: ...
class ScaleAccessible: ...
class ScaleButton: ...
class ScaleButtonAccessible: ...
class Scrollable: ...
class Scrollbar: ...
class ScrolledWindow: ...
class ScrolledWindowAccessible: ...
class SearchBar: ...
class SearchEntry: ...
class Separator: ...
class SeparatorMenuItem: ...
class SeparatorToolItem: ...
class Settings(GObject.Object, StyleProvider):
    def get_default(self, ) -> Settings: ...
    def get_for_screen(self, screen: Gdk.Screen): ...
    def install_property(self, pspec): ...
    def install_property_parser(self, pspec, parser): ...
    def reset_property(self, name: str): ...
    def set_double_property(self, name: str, v_double: float, origin): ...
    def set_long_property(self, name: str, v_long: int, origin): ...
    def set_property_value(self, name: str, svalue: SettingsValue): ...
    def set_string_property(self, name: str, v_string: str, origin): ...
class ShortcutLabel: ...
class ShortcutsGroup: ...
class ShortcutsSection: ...
class ShortcutsShortcut: ...
class ShortcutsWindow: ...
class SizeGroup: ...
class Socket: ...
class SpinButton: ...
class SpinButtonAccessible: ...
class SpinnerAccessible: ...
class Stack: ...
class StackAccessible: ...
class StackSidebar: ...
class StackSwitcher: ...
class StatusIcon: ...
class Statusbar: ...
class StatusbarAccessible: ...
class Style: ...
class StyleProperties: ...
class Switch: ...
class SwitchAccessible: ...
class Table: ...
class TearoffMenuItem: ...
class TextCellAccessible: ...
class TextChildAnchor: ...
class TextMark: ...
class TextTag: ...
class TextTagTable: ...
class TextViewAccessible: ...
class ThemingEngine: ...
class ToggleAction: ...
class ToggleButtonAccessible: ...
class ToggleToolButton: ...
class ToolButton: ...
class ToolItem: ...
class ToolItemGroup: ...
class ToolPalette: ...
class ToolShell: ...
class Toolbar: ...
class Tooltip: ...
class ToplevelAccessible: ...
class TreeDragDest: ...
class TreeDragSource: ...
class TreeModel: ...
class TreeModelFilter: ...
class TreeModelSort: ...
class TreeSelection: ...
class TreeSortable: ...
class TreeStore: ...
class TreeView: ...
class TreeViewAccessible: ...
class TreeViewColumn: ...
class UIManager: ...
class VBox: ...
class VButtonBox: ...
class VPaned: ...
class VScale: ...
class VScrollbar: ...
class VSeparator: ...
class Viewport: ...
class VolumeButton: ...
class WidgetAccessible: ...
class WindowAccessible: ...
class WindowGroup: ...
class AccelFlags: ...
class ApplicationInhibitFlags: ...
class AttachOptions: ...
class CalendarDisplayOptions: ...
class CellRendererState: ...
class DebugFlag: ...
class DialogFlags: ...
class EventControllerScrollFlags: ...
class FileFilterFlags: ...
class FontChooserLevel: ...
class IconLookupFlags: ...
class InputHints: ...
class JunctionSides: ...
class PlacesOpenFlags: ...
class RcFlags: ...
class RecentFilterFlags: ...
class RegionFlags: ...
class StateFlags(GObject.GFlags):
    ACTIVE: StateFlags
    BACKDROP: StateFlags
    CHECKED: StateFlags
    DIR_LTR: StateFlags
    DIR_RTL: StateFlags
    DROP_ACTIVE: StateFlags
    FOCUSED: StateFlags
    INCONSISTENT: StateFlags
    INSENSITIVE: StateFlags
    LINK: StateFlags
    NORMAL: StateFlags
    PRELIGHT: StateFlags
    SELECTED: StateFlags
    VISITED: StateFlags
class StyleContextPrintFlags: ...
class TargetFlags:
    SAME_APP: TargetFlags
    SAME_WIDGET: TargetFlags
    OTHER_APP: TargetFlags
    OTHER_WIDGET: TargetFlags
class TextSearchFlags: ...
class ToolPaletteDragTargets: ...
class TreeModelFlags: ...
class UIManagerItemType: ...
class ArrowPlacement: ...
class ArrowType: ...
class AssistantPageType: ...
class BaselinePosition: ...
class BorderStyle: ...
class BuilderError: ...
class ButtonBoxStyle:
    SPREAD: ButtonBoxStyle
    EDGE: ButtonBoxStyle
    START: ButtonBoxStyle
    END: ButtonBoxStyle
    CENTER: ButtonBoxStyle
    EXPAND: ButtonBoxStyle
class ButtonRole: ...
class ButtonsType: ...
class CellRendererAccelMode: ...
class CellRendererMode: ...
class CornerType: ...
class CssProviderError: ...
class CssSectionType: ...
class DeleteType: ...
class DirectionType: ...
class DragResult: ...
class EntryIconPosition: ...
class EventSequenceState: ...
class ExpanderStyle: ...
class FileChooserAction: ...
class FileChooserConfirmation: ...
class FileChooserError: ...
class IMPreeditStyle: ...
class IMStatusStyle: ...
class IconThemeError: ...
class IconViewDropPosition: ...
class ImageType: ...
class LevelBarMode: ...
class License: ...
class MenuDirectionType: ...
class MessageType: ...
class MovementStep: ...
class NotebookTab: ...
class NumberUpLayout: ...
class PackDirection: ...
class PadActionType: ...
class PageOrientation: ...
class PageSet: ...
class PanDirection: ...
class PathPriorityType: ...
class PathType: ...
class PolicyType: ...
class PopoverConstraint: ...
class PositionType: ...
class PrintDuplex: ...
class PrintError: ...
class PrintOperationAction: ...
class PrintOperationResult: ...
class PrintPages: ...
class PrintQuality: ...
class PrintStatus: ...
class PropagationPhase: ...
class RcTokenType: ...
class RecentChooserError: ...
class RecentManagerError: ...
class RecentSortType: ...
class ReliefStyle: ...
class ResizeMode: ...
class RevealerTransitionType: ...
class ScrollStep: ...
class ScrollType: ...
class ScrollablePolicy: ...
class SelectionMode: ...
class SensitivityType: ...
class ShadowType: ...
class ShortcutType: ...
class SizeGroupMode: ...
class SizeRequestMode: ...
class SortType: ...
class SpinButtonUpdatePolicy: ...
class SpinType: ...
class StackTransitionType: ...
class TextBufferTargetInfo: ...
class TextDirection: ...
class TextExtendSelection: ...
class TextViewLayer: ...
class TextWindowType: ...
class ToolbarSpaceStyle: ...
class ToolbarStyle: ...
class TreeViewColumnSizing: ...
class TreeViewDropPosition: ...
class TreeViewGridLines: ...
class Unit: ...
class WidgetHelpType: ...
class WindowType: ...
class AccelGroupEntry: ...
class AccelKey: ...
class ActionEntry: ...
class BindingArg: ...
class BindingEntry: ...
class BindingSet: ...
class BindingSignal: ...
class Border: ...
class CssSection: ...
class FileFilterInfo: ...
class FixedChild: ...
class Gradient: ...
class IMContextInfo: ...
class IconSet: ...
class IconSource: ...
class PadActionEntry: ...
class PageRange: ...
class PaperSize: ...
class RadioActionEntry: ...
class RcProperty: ...
class RecentData: ...
class RecentFilterInfo: ...
class RecentInfo: ...
class RequestedSize: ...
class Requisition: ...
class SelectionData: ...
class SettingsValue: ...
class StockItem: ...
class SymbolicColor: ...
class TableChild: ...
class TableRowCol: ...
class TargetPair: ...
class TextAppearance: ...
class TextAttributes: ...
class TextIter: ...
class ToggleActionEntry: ...
class TreeIter: ...
class TreePath: ...
class TreeRowReference: ...
class WidgetPath: ...

def accel_groups_activate(*args, **kwargs): ...
def accel_groups_from_object(*args, **kwargs): ...
def accelerator_get_default_mod_mask(*args, **kwargs): ...
def accelerator_get_label(*args, **kwargs): ...
def accelerator_get_label_with_keycode(*args, **kwargs): ...
def accelerator_name(*args, **kwargs): ...
def accelerator_name_with_keycode(*args, **kwargs): ...
def accelerator_parse(*args, **kwargs): ...
def accelerator_parse_with_keycode(*args, **kwargs): ...
def accelerator_set_default_mod_mask(*args, **kwargs): ...
def accelerator_valid(*args, **kwargs): ...
def alternative_dialog_button_order(*args, **kwargs): ...
def binding_entry_add_signal_from_string(*args, **kwargs): ...
def binding_entry_add_signall(*args, **kwargs): ...
def binding_entry_remove(*args, **kwargs): ...
def binding_entry_skip(*args, **kwargs): ...
def binding_set_find(*args, **kwargs): ...
def bindings_activate(*args, **kwargs): ...
def bindings_activate_event(*args, **kwargs): ...
def builder_error_quark(*args, **kwargs): ...
def cairo_should_draw_window(*args, **kwargs): ...
def cairo_transform_to_window(*args, **kwargs): ...
def check_version(*args, **kwargs): ...
def css_provider_error_quark(*args, **kwargs): ...
def device_grab_add(*args, **kwargs): ...
def device_grab_remove(*args, **kwargs): ...
def disable_setlocale(*args, **kwargs): ...
def distribute_natural_allocation(*args, **kwargs): ...
def drag_cancel(*args, **kwargs): ...
def drag_finish(*args, **kwargs): ...
def drag_get_source_widget(*args, **kwargs): ...
def drag_set_icon_default(*args, **kwargs): ...
def drag_set_icon_gicon(*args, **kwargs): ...
def drag_set_icon_name(*args, **kwargs): ...
def drag_set_icon_pixbuf(*args, **kwargs): ...
def drag_set_icon_stock(*args, **kwargs): ...
def drag_set_icon_surface(*args, **kwargs): ...
def drag_set_icon_widget(*args, **kwargs): ...
def draw_insertion_cursor(*args, **kwargs): ...
def events_pending(*args, **kwargs): ...
def false(*args, **kwargs): ...
def file_chooser_error_quark(*args, **kwargs): ...
def get_binary_age(*args, **kwargs): ...
def get_current_event(*args, **kwargs): ...
def get_current_event_device(*args, **kwargs): ...
def get_current_event_state(*args, **kwargs): ...
def get_current_event_time(*args, **kwargs): ...
def get_debug_flags(*args, **kwargs): ...
def get_default_language(*args, **kwargs): ...
def get_event_widget(*args, **kwargs): ...
def get_interface_age(*args, **kwargs): ...
def get_locale_direction(*args, **kwargs): ...
def get_major_version(*args, **kwargs): ...
def get_micro_version(*args, **kwargs): ...
def get_minor_version(*args, **kwargs): ...
def get_option_group(*args, **kwargs): ...
def grab_get_current(*args, **kwargs): ...
def icon_size_from_name(*args, **kwargs): ...
def icon_size_get_name(*args, **kwargs): ...
def icon_size_lookup(*args, **kwargs): ...
def icon_size_lookup_for_settings(*args, **kwargs): ...
def icon_size_register(*args, **kwargs): ...
def icon_size_register_alias(*args, **kwargs): ...
def icon_theme_error_quark(*args, **kwargs): ...
def init(*args, **kwargs): ...
def init_check(*args, **kwargs): ...
def init_with_args(*args, **kwargs): ...
def key_snooper_remove(*args, **kwargs): ...
def main(): ...
def main_do_event(*args, **kwargs): ...
def main_iteration(*args, **kwargs): ...
def main_iteration_do(*args, **kwargs): ...
def main_level(*args, **kwargs): ...
def main_quit(): ...
def paint_arrow(*args, **kwargs): ...
def paint_box(*args, **kwargs): ...
def paint_box_gap(*args, **kwargs): ...
def paint_check(*args, **kwargs): ...
def paint_diamond(*args, **kwargs): ...
def paint_expander(*args, **kwargs): ...
def paint_extension(*args, **kwargs): ...
def paint_flat_box(*args, **kwargs): ...
def paint_focus(*args, **kwargs): ...
def paint_handle(*args, **kwargs): ...
def paint_hline(*args, **kwargs): ...
def paint_layout(*args, **kwargs): ...
def paint_option(*args, **kwargs): ...
def paint_resize_grip(*args, **kwargs): ...
def paint_shadow(*args, **kwargs): ...
def paint_shadow_gap(*args, **kwargs): ...
def paint_slider(*args, **kwargs): ...
def paint_spinner(*args, **kwargs): ...
def paint_tab(*args, **kwargs): ...
def paint_vline(*args, **kwargs): ...
def paper_size_get_default(*args, **kwargs): ...
def paper_size_get_paper_sizes(*args, **kwargs): ...
def parse_args(*args, **kwargs): ...
def print_error_quark(*args, **kwargs): ...
def print_run_page_setup_dialog(*args, **kwargs): ...
def print_run_page_setup_dialog_async(*args, **kwargs): ...
def propagate_event(*args, **kwargs): ...
def rc_add_default_file(*args, **kwargs): ...
def rc_find_module_in_path(*args, **kwargs): ...
def rc_find_pixmap_in_path(*args, **kwargs): ...
def rc_get_default_files(*args, **kwargs): ...
def rc_get_im_module_file(*args, **kwargs): ...
def rc_get_im_module_path(*args, **kwargs): ...
def rc_get_module_dir(*args, **kwargs): ...
def rc_get_style(*args, **kwargs): ...
def rc_get_style_by_paths(*args, **kwargs): ...
def rc_get_theme_dir(*args, **kwargs): ...
def rc_parse(*args, **kwargs): ...
def rc_parse_color(*args, **kwargs): ...
def rc_parse_color_full(*args, **kwargs): ...
def rc_parse_priority(*args, **kwargs): ...
def rc_parse_state(*args, **kwargs): ...
def rc_parse_string(*args, **kwargs): ...
def rc_property_parse_border(*args, **kwargs): ...
def rc_property_parse_color(*args, **kwargs): ...
def rc_property_parse_enum(*args, **kwargs): ...
def rc_property_parse_flags(*args, **kwargs): ...
def rc_property_parse_requisition(*args, **kwargs): ...
def rc_reparse_all(*args, **kwargs): ...
def rc_reparse_all_for_settings(*args, **kwargs): ...
def rc_reset_styles(*args, **kwargs): ...
def rc_set_default_files(*args, **kwargs): ...
def recent_chooser_error_quark(*args, **kwargs): ...
def recent_manager_error_quark(*args, **kwargs): ...
def render_activity(*args, **kwargs): ...
def render_arrow(*args, **kwargs): ...
def render_background(*args, **kwargs): ...
def render_background_get_clip(*args, **kwargs): ...
def render_check(*args, **kwargs): ...
def render_expander(*args, **kwargs): ...
def render_extension(*args, **kwargs): ...
def render_focus(*args, **kwargs): ...
def render_frame(*args, **kwargs): ...
def render_frame_gap(*args, **kwargs): ...
def render_handle(*args, **kwargs): ...
def render_icon(*args, **kwargs): ...
def render_icon_pixbuf(*args, **kwargs): ...
def render_icon_surface(*args, **kwargs): ...
def render_insertion_cursor(*args, **kwargs): ...
def render_layout(*args, **kwargs): ...
def render_line(*args, **kwargs): ...
def render_option(*args, **kwargs): ...
def render_slider(*args, **kwargs): ...
def rgb_to_hsv(*args, **kwargs): ...
def selection_add_target(*args, **kwargs): ...
def selection_add_targets(*args, **kwargs): ...
def selection_clear_targets(*args, **kwargs): ...
def selection_convert(*args, **kwargs): ...
def selection_owner_set(*args, **kwargs): ...
def selection_owner_set_for_display(*args, **kwargs): ...
def selection_remove_all(*args, **kwargs): ...
def set_debug_flags(*args, **kwargs): ...
def show_uri(*args, **kwargs): ...
def show_uri_on_window(*args, **kwargs): ...
def stock_add(*args, **kwargs): ...
def stock_add_static(*args, **kwargs): ...
def stock_list_ids(*args, **kwargs): ...
def stock_lookup(*args, **kwargs): ...
def stock_set_translate_func(*args, **kwargs): ...
def target_table_free(*args, **kwargs): ...
def target_table_new_from_list(*args, **kwargs): ...
def targets_include_image(*args, **kwargs): ...
def targets_include_rich_text(*args, **kwargs): ...
def targets_include_text(*args, **kwargs): ...
def targets_include_uri(*args, **kwargs): ...
def test_create_simple_window(*args, **kwargs): ...
def test_find_label(*args, **kwargs): ...
def test_find_sibling(*args, **kwargs): ...
def test_find_widget(*args, **kwargs): ...
def test_list_all_types(*args, **kwargs): ...
def test_register_all_types(*args, **kwargs): ...
def test_slider_get_value(*args, **kwargs): ...
def test_slider_set_perc(*args, **kwargs): ...
def test_spin_button_click(*args, **kwargs): ...
def test_text_get(*args, **kwargs): ...
def test_text_set(*args, **kwargs): ...
def test_widget_click(*args, **kwargs): ...
def test_widget_send_key(*args, **kwargs): ...
def test_widget_wait_for_draw(*args, **kwargs): ...
def tree_get_row_drag_data(*args, **kwargs): ...
def tree_row_reference_deleted(*args, **kwargs): ...
def tree_row_reference_inserted(*args, **kwargs): ...
def tree_set_row_drag_data(*args, **kwargs): ...
def true(*args, **kwargs): ...

BINARY_AGE = ...
INPUT_ERROR = ...
INTERFACE_AGE = ...
LEVEL_BAR_OFFSET_FULL = ...
LEVEL_BAR_OFFSET_HIGH = ...
LEVEL_BAR_OFFSET_LOW = ...
MAJOR_VERSION = ...
MAX_COMPOSE_LEN = ...
MICRO_VERSION = ...
MINOR_VERSION = ...
PAPER_NAME_A3 = ...
PAPER_NAME_A4 = ...
PAPER_NAME_A5 = ...
PAPER_NAME_B5 = ...
PAPER_NAME_EXECUTIVE = ...
PAPER_NAME_LEGAL = ...
PAPER_NAME_LETTER = ...
PATH_PRIO_MASK = ...
PRINT_SETTINGS_COLLATE = ...
PRINT_SETTINGS_DEFAULT_SOURCE = ...
PRINT_SETTINGS_DITHER = ...
PRINT_SETTINGS_DUPLEX = ...
PRINT_SETTINGS_FINISHINGS = ...
PRINT_SETTINGS_MEDIA_TYPE = ...
PRINT_SETTINGS_NUMBER_UP = ...
PRINT_SETTINGS_NUMBER_UP_LAYOUT = ...
PRINT_SETTINGS_N_COPIES = ...
PRINT_SETTINGS_ORIENTATION = ...
PRINT_SETTINGS_OUTPUT_BASENAME = ...
PRINT_SETTINGS_OUTPUT_BIN = ...
PRINT_SETTINGS_OUTPUT_DIR = ...
PRINT_SETTINGS_OUTPUT_FILE_FORMAT = ...
PRINT_SETTINGS_OUTPUT_URI = ...
PRINT_SETTINGS_PAGE_RANGES = ...
PRINT_SETTINGS_PAGE_SET = ...
PRINT_SETTINGS_PAPER_FORMAT = ...
PRINT_SETTINGS_PAPER_HEIGHT = ...
PRINT_SETTINGS_PAPER_WIDTH = ...
PRINT_SETTINGS_PRINTER = ...
PRINT_SETTINGS_PRINTER_LPI = ...
PRINT_SETTINGS_PRINT_PAGES = ...
PRINT_SETTINGS_QUALITY = ...
PRINT_SETTINGS_RESOLUTION = ...
PRINT_SETTINGS_RESOLUTION_X = ...
PRINT_SETTINGS_RESOLUTION_Y = ...
PRINT_SETTINGS_REVERSE = ...
PRINT_SETTINGS_SCALE = ...
PRINT_SETTINGS_USE_COLOR = ...
PRINT_SETTINGS_WIN32_DRIVER_EXTRA = ...
PRINT_SETTINGS_WIN32_DRIVER_VERSION = ...
PRIORITY_RESIZE = ...
STOCK_ABOUT = ...
STOCK_ADD = ...
STOCK_APPLY = ...
STOCK_BOLD = ...
STOCK_CANCEL = ...
STOCK_CAPS_LOCK_WARNING = ...
STOCK_CDROM = ...
STOCK_CLEAR = ...
STOCK_CLOSE = ...
STOCK_COLOR_PICKER = ...
STOCK_CONNECT = ...
STOCK_CONVERT = ...
STOCK_COPY = ...
STOCK_CUT = ...
STOCK_DELETE = ...
STOCK_DIALOG_AUTHENTICATION = ...
STOCK_DIALOG_ERROR = ...
STOCK_DIALOG_INFO = ...
STOCK_DIALOG_QUESTION = ...
STOCK_DIALOG_WARNING = ...
STOCK_DIRECTORY = ...
STOCK_DISCARD = ...
STOCK_DISCONNECT = ...
STOCK_DND = ...
STOCK_DND_MULTIPLE = ...
STOCK_EDIT = ...
STOCK_EXECUTE = ...
STOCK_FILE = ...
STOCK_FIND = ...
STOCK_FIND_AND_REPLACE = ...
STOCK_FLOPPY = ...
STOCK_FULLSCREEN = ...
STOCK_GOTO_BOTTOM = ...
STOCK_GOTO_FIRST = ...
STOCK_GOTO_LAST = ...
STOCK_GOTO_TOP = ...
STOCK_GO_BACK = ...
STOCK_GO_DOWN = ...
STOCK_GO_FORWARD = ...
STOCK_GO_UP = ...
STOCK_HARDDISK = ...
STOCK_HELP = ...
STOCK_HOME = ...
STOCK_INDENT = ...
STOCK_INDEX = ...
STOCK_INFO = ...
STOCK_ITALIC = ...
STOCK_JUMP_TO = ...
STOCK_JUSTIFY_CENTER = ...
STOCK_JUSTIFY_FILL = ...
STOCK_JUSTIFY_LEFT = ...
STOCK_JUSTIFY_RIGHT = ...
STOCK_LEAVE_FULLSCREEN = ...
STOCK_MEDIA_FORWARD = ...
STOCK_MEDIA_NEXT = ...
STOCK_MEDIA_PAUSE = ...
STOCK_MEDIA_PLAY = ...
STOCK_MEDIA_PREVIOUS = ...
STOCK_MEDIA_RECORD = ...
STOCK_MEDIA_REWIND = ...
STOCK_MEDIA_STOP = ...
STOCK_MISSING_IMAGE = ...
STOCK_NETWORK = ...
STOCK_NEW = ...
STOCK_NO = ...
STOCK_OK = ...
STOCK_OPEN = ...
STOCK_ORIENTATION_LANDSCAPE = ...
STOCK_ORIENTATION_PORTRAIT = ...
STOCK_ORIENTATION_REVERSE_LANDSCAPE = ...
STOCK_ORIENTATION_REVERSE_PORTRAIT = ...
STOCK_PAGE_SETUP = ...
STOCK_PASTE = ...
STOCK_PREFERENCES = ...
STOCK_PRINT = ...
STOCK_PRINT_ERROR = ...
STOCK_PRINT_PAUSED = ...
STOCK_PRINT_PREVIEW = ...
STOCK_PRINT_REPORT = ...
STOCK_PRINT_WARNING = ...
STOCK_PROPERTIES = ...
STOCK_QUIT = ...
STOCK_REDO = ...
STOCK_REFRESH = ...
STOCK_REMOVE = ...
STOCK_REVERT_TO_SAVED = ...
STOCK_SAVE = ...
STOCK_SAVE_AS = ...
STOCK_SELECT_ALL = ...
STOCK_SELECT_COLOR = ...
STOCK_SELECT_FONT = ...
STOCK_SORT_ASCENDING = ...
STOCK_SORT_DESCENDING = ...
STOCK_SPELL_CHECK = ...
STOCK_STOP = ...
STOCK_STRIKETHROUGH = ...
STOCK_UNDELETE = ...
STOCK_UNDERLINE = ...
STOCK_UNDO = ...
STOCK_UNINDENT = ...
STOCK_YES = ...
STOCK_ZOOM_100 = ...
STOCK_ZOOM_FIT = ...
STOCK_ZOOM_IN = ...
STOCK_ZOOM_OUT = ...
STYLE_CLASS_ACCELERATOR = ...
STYLE_CLASS_ARROW = ...
STYLE_CLASS_BACKGROUND = ...
STYLE_CLASS_BOTTOM = ...
STYLE_CLASS_BUTTON = ...
STYLE_CLASS_CALENDAR = ...
STYLE_CLASS_CELL = ...
STYLE_CLASS_CHECK = ...
STYLE_CLASS_COMBOBOX_ENTRY = ...
STYLE_CLASS_CONTEXT_MENU = ...
STYLE_CLASS_CSD = ...
STYLE_CLASS_CURSOR_HANDLE = ...
STYLE_CLASS_DEFAULT = ...
STYLE_CLASS_DESTRUCTIVE_ACTION = ...
STYLE_CLASS_DIM_LABEL = ...
STYLE_CLASS_DND = ...
STYLE_CLASS_DOCK = ...
STYLE_CLASS_ENTRY = ...
STYLE_CLASS_ERROR = ...
STYLE_CLASS_EXPANDER = ...
STYLE_CLASS_FLAT = ...
STYLE_CLASS_FRAME = ...
STYLE_CLASS_GRIP = ...
STYLE_CLASS_HEADER = ...
STYLE_CLASS_HIGHLIGHT = ...
STYLE_CLASS_HORIZONTAL = ...
STYLE_CLASS_IMAGE = ...
STYLE_CLASS_INFO = ...
STYLE_CLASS_INLINE_TOOLBAR = ...
STYLE_CLASS_INSERTION_CURSOR = ...
STYLE_CLASS_LABEL = ...
STYLE_CLASS_LEFT = ...
STYLE_CLASS_LEVEL_BAR = ...
STYLE_CLASS_LINKED = ...
STYLE_CLASS_LIST = ...
STYLE_CLASS_LIST_ROW = ...
STYLE_CLASS_MARK = ...
STYLE_CLASS_MENU = ...
STYLE_CLASS_MENUBAR = ...
STYLE_CLASS_MENUITEM = ...
STYLE_CLASS_MESSAGE_DIALOG = ...
STYLE_CLASS_MONOSPACE = ...
STYLE_CLASS_NEEDS_ATTENTION = ...
STYLE_CLASS_NOTEBOOK = ...
STYLE_CLASS_OSD = ...
STYLE_CLASS_OVERSHOOT = ...
STYLE_CLASS_PANE_SEPARATOR = ...
STYLE_CLASS_PAPER = ...
STYLE_CLASS_POPOVER = ...
STYLE_CLASS_POPUP = ...
STYLE_CLASS_PRIMARY_TOOLBAR = ...
STYLE_CLASS_PROGRESSBAR = ...
STYLE_CLASS_PULSE = ...
STYLE_CLASS_QUESTION = ...
STYLE_CLASS_RADIO = ...
STYLE_CLASS_RAISED = ...
STYLE_CLASS_READ_ONLY = ...
STYLE_CLASS_RIGHT = ...
STYLE_CLASS_RUBBERBAND = ...
STYLE_CLASS_SCALE = ...
STYLE_CLASS_SCALE_HAS_MARKS_ABOVE = ...
STYLE_CLASS_SCALE_HAS_MARKS_BELOW = ...
STYLE_CLASS_SCROLLBAR = ...
STYLE_CLASS_SCROLLBARS_JUNCTION = ...
STYLE_CLASS_SEPARATOR = ...
STYLE_CLASS_SIDEBAR = ...
STYLE_CLASS_SLIDER = ...
STYLE_CLASS_SPINBUTTON = ...
STYLE_CLASS_SPINNER = ...
STYLE_CLASS_STATUSBAR = ...
STYLE_CLASS_SUBTITLE = ...
STYLE_CLASS_SUGGESTED_ACTION = ...
STYLE_CLASS_TITLE = ...
STYLE_CLASS_TITLEBAR = ...
STYLE_CLASS_TOOLBAR = ...
STYLE_CLASS_TOOLTIP = ...
STYLE_CLASS_TOP = ...
STYLE_CLASS_TOUCH_SELECTION = ...
STYLE_CLASS_TROUGH = ...
STYLE_CLASS_UNDERSHOOT = ...
STYLE_CLASS_VERTICAL = ...
STYLE_CLASS_VIEW = ...
STYLE_CLASS_WARNING = ...
STYLE_CLASS_WIDE = ...
STYLE_PROPERTY_BACKGROUND_COLOR = ...
STYLE_PROPERTY_BACKGROUND_IMAGE = ...
STYLE_PROPERTY_BORDER_COLOR = ...
STYLE_PROPERTY_BORDER_RADIUS = ...
STYLE_PROPERTY_BORDER_STYLE = ...
STYLE_PROPERTY_BORDER_WIDTH = ...
STYLE_PROPERTY_COLOR = ...
STYLE_PROPERTY_FONT = ...
STYLE_PROPERTY_MARGIN = ...
STYLE_PROPERTY_PADDING = ...
STYLE_PROVIDER_PRIORITY_APPLICATION = ...
STYLE_PROVIDER_PRIORITY_FALLBACK = ...
STYLE_PROVIDER_PRIORITY_SETTINGS = ...
STYLE_PROVIDER_PRIORITY_THEME = ...
STYLE_PROVIDER_PRIORITY_USER = ...
STYLE_REGION_COLUMN = ...
STYLE_REGION_COLUMN_HEADER = ...
STYLE_REGION_ROW = ...
STYLE_REGION_TAB = ...
TEXT_VIEW_PRIORITY_VALIDATE = ...
TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = ...
TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = ...
